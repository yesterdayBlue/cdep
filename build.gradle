apply plugin: 'java'
apply plugin: 'kotlin'
group 'io.cdep'

if (System.getenv()["TRAVIS_TAG"] != null && System.getenv()["TRAVIS_TAG"].length() > 0) {
    version System.getenv()["TRAVIS_TAG"]
} else {
    version 'dev'
}

repositories {
    mavenCentral()
}

dependencies {
    testCompile 'junit:junit:4.11'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}
buildscript {
    ext.kotlin_version = '1.2.30'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
gradle.projectsEvaluated {
    gradle ->
        println "项目数量："+ gradle.getRootProject().getAllprojects().size()
        def projects = gradle.getRootProject().getAllprojects()
        projects.each {Project project ->
            println "项目名称："+project.name
            project.getDependencies().findAll().each {
                Object object ->
                    println object
            }
            def names = project.configurations.getNames()
            names.each {String name ->
                def configuration = project.configurations.getByName(name)
                println configuration.getName()
                configuration.each { File file ->
                    println project.name+"依赖jar包路径："+(file.getCanonicalPath())
                    copy {
                        from file
                        into "lib"
                        rename { String fileName ->
                            //防止文件重名
                            fileName = file.getParentFile().getName()+"_"+fileName
                        }
                    }
                }
            }
        }
        println "所有的project输出jar包完毕"
}
